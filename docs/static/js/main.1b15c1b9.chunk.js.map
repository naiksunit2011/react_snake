{"version":3,"sources":["Bang/Bang.js","Board/Board.js","App.js","serviceWorker.js","index.js"],"names":["Bang","react_default","a","createElement","className","this","props","showFireWork","Component","Board","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleFlag","isStart","size","speed","snakeLength","foodId","currentX","currentY","direction","buttonName","gameOver","isInfinite","state","currentDarkPixel","createFood","board","i","rows","j","id","push","key","darkPixel","indexOf","rowId","_this2","endGame","increaseSpeed","length","shift","setState","interval","setTimeout","createSnake","declareWinner","Math","floor","random","e","_this3","clearInterval","thisRef","keyCode","startSnake","_this4","document","addEventListener","handleControl","removeEventListener","_this5","src_Bang_Bang","renderBoard","onClick","App","src_Board_Board","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1b15c1b9.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Bang.css';\r\n\r\nclass Bang extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className={'fireWork ' + this.props.showFireWork}>\r\n                <div className=\"before\"></div>\r\n                <div className=\"after\"></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Bang;","import React, { Component } from 'react';\r\nimport Bang from '../Bang/Bang.js';\r\nimport './Board.css';\r\n\r\nclass Board extends Component {\r\n\r\n    toggleFlag = 0\r\n    isStart = false;\r\n    size = 35;\r\n    speed = 200;\r\n    snakeLength = 10;\r\n    foodId = \"0_5\";\r\n    currentX = 0;\r\n    currentY = 0;\r\n    direction = \"R\";\r\n    buttonName = \"Start/Stop\";\r\n    gameOver = \"\";\r\n    isInfinite = true;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentDarkPixel: [],\r\n            showFireWork: \"\"\r\n        };\r\n        this.foodId = this.createFood();\r\n    }\r\n\r\n    renderBoard() {\r\n        var board = [];\r\n        for (var i = 0; i < this.size; i++) {\r\n            var rows = [];\r\n            for (var j = 0; j < this.size; j++) {\r\n                var id = i + \"_\" + j;\r\n                if (this.foodId === id) {\r\n                    rows.push(<div id={id} key={id} className={'board-pixel dark-pixel'}></div>);\r\n                } else {\r\n                    var darkPixel = (this.state.currentDarkPixel.indexOf(id) >= 0) ? \"dark-pixel\" : \"\";\r\n                    rows.push(<div id={id} key={id} className={'board-pixel ' + darkPixel}></div>);\r\n                }\r\n            }\r\n            var rowId = \"Row_\" + i;\r\n            board.push(<div id={rowId} key={rowId} className=\"board-row\">{rows}</div>);\r\n        }\r\n        return board;\r\n    }\r\n\r\n    createSnake() {\r\n\r\n        var id = this.currentX + \"_\" + this.currentY;\r\n        if (this.state.currentDarkPixel.indexOf(id) >= 0) {\r\n            this.endGame();\r\n        }\r\n\r\n        this.state.currentDarkPixel.push(id);\r\n        if (this.foodId === id) {\r\n            this.foodId = this.createFood();\r\n            this.snakeLength = this.snakeLength + 1;\r\n            this.increaseSpeed();\r\n        }\r\n\r\n        if (this.state.currentDarkPixel.length > this.snakeLength)\r\n            this.state.currentDarkPixel.shift();\r\n\r\n        var direction = this.direction;\r\n        if (direction === \"U\") {\r\n            this.currentX = this.currentX - 1;\r\n            if (this.currentX < 0) {\r\n                if (this.isInfinite)\r\n                    this.currentX = this.size;\r\n                else\r\n                    this.endGame();\r\n            }\r\n        } else if (direction === \"D\") {\r\n            this.currentX = this.currentX + 1;\r\n            if (this.currentX > this.size) {\r\n                if (this.isInfinite)\r\n                    this.currentX = 0;\r\n                else\r\n                    this.endGame();\r\n            }\r\n        } else if (direction === \"L\") {\r\n            this.currentY = this.currentY - 1;\r\n            if (this.currentY < 0) {\r\n                if (this.isInfinite)\r\n                    this.currentY = this.size;\r\n                else\r\n                    this.endGame();\r\n            }\r\n        } else if (direction === \"R\") {\r\n            this.currentY = this.currentY + 1;\r\n            if (this.currentY > this.size) {\r\n                if (this.isInfinite)\r\n                    this.currentY = 0;\r\n                else\r\n                    this.endGame();\r\n            }\r\n        }\r\n        this.setState({ currentDarkPixel: this.state.currentDarkPixel, showFireWork: this.state.showFireWork });\r\n        if (this.isStart)\r\n            this.interval = setTimeout(() => this.createSnake(), this.speed);\r\n    }\r\n\r\n    increaseSpeed() {\r\n        if (this.speed === 100) {\r\n            this.declareWinner();\r\n        }\r\n        this.speed = this.speed - 10;\r\n    }\r\n\r\n    createFood() {\r\n        var foodX = Math.floor(Math.random() * this.size);\r\n        var foodY = Math.floor(Math.random() * this.size);\r\n        return foodX + \"_\" + foodY;\r\n    }\r\n\r\n    startSnake(e) {\r\n        if (this.isStart) {\r\n            this.isStart = false;\r\n            clearInterval(this.interval);\r\n        } else {\r\n            this.isStart = true;\r\n            this.interval = setTimeout(() => this.createSnake(), this.speed);\r\n        }\r\n    }\r\n\r\n    endGame() {\r\n        this.isStart = false;\r\n        clearInterval(this.interval);\r\n        this.gameOver = \"Game over!!!\";\r\n    }\r\n\r\n    declareWinner() {\r\n        this.isStart = false;\r\n        clearInterval(this.interval);\r\n        this.gameOver = \"Winner winner chicken dinner!!!\";\r\n        this.setState({ currentDarkPixel: [], showFireWork: \"showFireWork\" });\r\n    }\r\n\r\n    handleControl(e, thisRef) {\r\n        if (e.keyCode === 37 && this.direction !== \"R\") {\r\n            thisRef.direction = \"L\";\r\n        } else if (e.keyCode === 38 && this.direction !== \"D\") {\r\n            thisRef.direction = \"U\";\r\n        } else if (e.keyCode === 39 && this.direction !== \"L\") {\r\n            thisRef.direction = \"R\";\r\n        } else if (e.keyCode === 40 && this.direction !== \"U\") {\r\n            thisRef.direction = \"D\";\r\n        } else if (e.keyCode === 13) {\r\n            thisRef.startSnake(e);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('keydown', (e) => {\r\n            this.handleControl(e, this);\r\n        });\r\n    }\r\n    componentWillUnmount() {\r\n        document.removeEventListener('keydown', this.handleControl);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Bang showFireWork={this.state.showFireWork} />\r\n                <div className=\"board-header-wrapper\">\r\n                    <span>Total Score : {this.snakeLength - 10}</span>\r\n                </div>\r\n                <div className=\"board-inner-wrapper\">{this.renderBoard()}</div>\r\n                <div className=\"board-control-wrapper\">\r\n                    <button id=\"startBtn\" key=\"startBtn\" onClick={(e) => this.startSnake(e)}>{this.buttonName}</button>\r\n                </div>\r\n                <div className=\"board-footer-wrapper\">\r\n                    <span>{this.gameOver}</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Board;","import React, { Component } from 'react';\nimport Board from './Board/Board.js';\nimport './App.css';\n\nclass App extends Component {\n\n\n  render() {\n    return (\n      <div className=\"outter-wrapper\">\n        \n        <div className=\"header\">\n          <span>Snake Game</span>\n        </div>\n        <div className=\"board\">\n          <Board/>\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();"],"sourceRoot":""}